<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Login</title>
    <style>
      body {
        font-family: "Courier New", Courier, monospace;
        margin: 0;
      }
      nav {
        background: #027c49;
        padding: 20px 10px;
      }
      nav ul {
        max-width: 960px;
        margin: 0 auto;
        padding: 0;
      }
      nav li {
        list-style-type: none;
        display: inline-block;
        margin: 0 10px 0 0;
      }
      nav a {
        color: #fff;
        font-size: 18px;
        background: rgba(255, 255, 255, 0.2);
        text-decoration: none;
        padding: 10px;
        display: block;
      }
      main {
        max-width: 960px;
        margin: 30px auto;
        padding: 0 10px;
        color: #333;
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .logout-btn {
        color: #fff;
        text-decoration: none;
        font-size: 18px;
        padding: 10px;
        background: #032406;
      }

      /* body {
        font-family: Arial, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
      } */

      .profile-container {
        max-width: 400px;
        margin-top: 50px;
        padding: 20px;
        border: 1px solid #ddd;
        border-radius: 8px;
        text-align: center;
      }

      .profile-picture {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        object-fit: cover;
      }

      .edit-icon {
        font-size: 12px;
        cursor: pointer;
        color: white;
        background-color: green;
        padding: 10px 20px;
        margin-left: 2px;
      }
      .indicator {
        display: inline-block;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin-left: 5px;
      }
      .indicator-green {
        color: green;
      }
      .indicator-red {
        color: red;
      }
      /* Modal styling */
      .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
      }
      .modal-content {
        background: white;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
        width: 300px;
        position: relative;
      }
      .x-pos {
        position: absolute;
        top: 2px;
        right: 5px;
        cursor: pointer;
      }
      .modal-buttons button {
        margin: 5px;
      }
      .error {
        color: red;
        font-size: 0.9em;
      }
      .delete-btn {
        background-color: red;
        color: white;
        padding: 0.75rem 1rem;
        border: none;
        cursor: pointer;
      }
      button {
        border: none;
        padding: 0.75rem 1rem;
        cursor: pointer;
        background-color: rgb(0, 71, 0);
        color: white;
        border-radius: 5px;
      }
    </style>
  </head>
  <body>
    <nav>
      <ul>
        <li>
          <h1>KM</h1>
        </li>
        <li><a href="/">Homepage</a></li>
        <li>
          <a href="/system">My Files and Folders</a>
        </li>
        <li>
          <a href="/system/myshared">My Shared Folders</a>
        </li>
        <li>
          <a href="/auth/logout">Logout</a>
        </li>
      </ul>
    </nav>

    <main>
      <div class="profile-container">
        <h2>Welcome back, <%= user.name %>!</h2>
        <div class="parent-pos">
          <img
            id="profile-picture"
            src="<%= user.profilePicture || 'https://img.freepik.com/free-vector/blue-circle-with-white-user_78370-4707.jpg' %>"
            onerror="this.onerror=null; this.src='https://img.freepik.com/free-vector/blue-circle-with-white-user_78370-4707.jpg';"
            alt="Profile Picture"
            class="profile-picture"
          />
          <br />
          <br />
          <span class="edit-icon" onclick="openProfilePicModal()">Edit</span>
        </div>

        <div>
          <p>
            Email: <span id="user-email"><%= user.email %> </span
            ><span class="edit-icon" onclick="openEmailModal()">Edit</span>
          </p>

          <div id="email-error" class="error"></div>
        </div>

        <div>
          <p>
            Connected with Google:
            <span
              id="google-indicator"
              class="indicator <%= user.googleId ? 'indicator-green' : 'indicator-red' %>"
              ><%= user.googleId ? 'YES' : 'NO' %></span
            >
          </p>
          <p>
            Connected with GitHub:
            <span
              id="github-indicator"
              class="indicator <%= user.githubId ? 'indicator-green' : 'indicator-red' %>"
              ><%= user.githubId ? 'YES' : 'NO' %></span
            >
          </p>
        </div>
        <!-- Delete Account -->
        <button class="delete-btn" onclick="deleteAccount()">
          Delete Account
        </button>
      </div>

      <!-- Profile Picture Modal -->
      <div id="profile-pic-modal" class="modal">
        <div class="modal-content">
          <form
            action="/profile/image/update"
            method="POST"
            enctype="multipart/form-data"
          >
            <span class="x-pos" onclick="closeProfilePicModal()">X</span>
            <h3>Edit Profile Picture</h3>
            <input
              type="file"
              id="profile-pic-input"
              accept="image/*"
              name="profilePic"
            />
            <br />
            <br />
            <div class="modal-buttons">
              <button type="submit">Upload New Image</button>
              <button type="button" onclick="closeProfilePicModal()">
                Cancel
              </button>
            </div>
          </form>
        </div>
      </div>

      <!-- Email Modal -->
      <div id="email-modal" class="modal">
        <div class="modal-content">
          <span class="x-pos" onclick="closeEmailModal()">X</span>
          <h3>Edit Email</h3>
          <input type="email" id="new-email" placeholder="Enter new email" />
          <br />
          <div class="modal-buttons">
            <button onclick="checkAndSaveEmail()">Change to this email</button>
            <button onclick="closeEmailModal()">Cancel</button>
          </div>
          <p id="displayErr" style="display: none">Error</p>
        </div>
      </div>
    </main>
  </body>
  <script>
    document.addEventListener("keydown", function (e) {
      if (e.key === "Escape") {
        closeProfilePicModal();
        closeEmailModal();
      }
    });
    function openProfilePicModal() {
      document.getElementById("profile-pic-modal").style.display = "flex";
    }

    function closeProfilePicModal() {
      document.getElementById("profile-pic-modal").style.display = "none";
    }

    // Email Modal Functions
    function openEmailModal() {
      document.getElementById("email-modal").style.display = "flex";
    }

    function closeEmailModal() {
      document.getElementById("email-modal").style.display = "none";
      document.getElementById("email-error").textContent = ""; // Clear error message
    }

    async function checkAndSaveEmail() {
      const newEmail = document.getElementById("new-email").value;
      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      const data = {
        email: newEmail,
      };
      console.log(emailRegex.test(newEmail));
      if (!emailRegex.test(newEmail)) {
        const error = document.getElementById("displayErr");
        error.style = "display: block; color: red";
        error.textContent = "Email is not valid";
      } else {
        const update = fetch("/profile/email/update", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });
        console.log(await update);
        if (!update.status == 200) {
          const error = document.getElementById("displayErr");
          error.style = "display: block; color: red";
          error.textContent = "Email is not valid";
        }

        window.location.href = "/profile";
      }
      // Simulate a database check with a fetch request
    }

    async function deleteAccount() {
      try {
        console.log("Trying to delete account in browser");
        const result = await fetch("/auth/delete", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
        });

        // Check if the request was successful
        if (result.ok) {
          // The server responded successfully, now actually perform the redirect
          window.location.href = "/";
        } else {
          console.error("Failed to delete account:", result.status);
          // Optionally show an error message to the user
          alert("Failed to delete account. Please try again.");
        }
      } catch (error) {
        console.error("Error deleting account:", error);
        // Optionally show an error message to the user
        alert("Error deleting account. Please try again.");
      }
    }
  </script>
</html>
